import:
    # Blocks
    - https://tangrams.github.io/blocks/elevation/stripes.yaml
    - https://tangrams.github.io/blocks/elevation/contours.yaml
    - https://tangrams.github.io/blocks/polygons/dots.yaml
    - https://tangrams.github.io/blocks/polygons/shimmering.yaml
    - https://tangrams.github.io/blocks/polygons/stripes.yaml
    - https://tangrams.github.io/blocks/polygons/diagonal-stripes.yaml
    - https://tangrams.github.io/blocks/polygons/diagonal-grid.yaml
    # Utils
    - https://tangrams.github.io/blocks/geometry/normal.yaml
    # Custom Commons
    - ./common.yaml

styles:
    elevation-color-contours:
        mix: [tron-palette, elevation-contours]
        animated: true
        shaders:
            defines:
                CONTOURS_PALETTE_RANGE: 2.
                CONTOURS_BACKGROUND_COLOR: vec3(0.)
                CONTOURS_COLOR: palette(normal_elv_raster.a*PI*CONTOURS_PALETTE_RANGE+u_time*.5)
                CONTOURS_SCALE: 60.
                CONTOURS_SPEED: -0.1
                CONTOURS_OFFSET: u_time*CONTOURS_SPEED
    polygons-linewall:
        base: polygons
        mix: [geometry-normal]
        texcoords: true
        blend: add
        shaders:
            blocks:
                color: |
                    if (isWall()) {
                        float lineWidth = 0.003*(u_tile_origin.z/20.0);
                        color = mix(vec4(0.),
                                    color,
                                    1.0-(step(lineWidth,v_texcoord.x)-step(1.0-lineWidth,v_texcoord.x))*
                                        (step(lineWidth,v_texcoord.y)-step(1.0-lineWidth,v_texcoord.y)) );
                    } else {
                        color = vec4(0.);
                    }
    polygons-diagonal-dash:
        base: polygons
        mix: [block, space-tile, tiling-brick, tiling-tile, shapes-type]
        shaders:
            defines:
                DASH_COLOR: color.rgb*.5
                DASH_BACKGROUND_COLOR: color.rgb
                DASH_SCALE: 10.
                DASH_SIZE: 0.9
                DASH_TYPE: fill
                DASH_TILE_STYLE: tile
            blocks:
                global: |
                    float dashDF(vec2 st) {
                        return min(cos((st.x-st.y)*PI),-cos((st.x+st.y+.5)*PI*.6666)*5.);
                    }
                color: |
                    color.rgb = mix(DASH_BACKGROUND_COLOR, 
                                    DASH_COLOR, 
                                    DASH_TYPE( DASH_SIZE, dashDF(DASH_TILE_STYLE(getTileCoords()*DASH_SCALE,3.))) );

    elevation-diagonal-dash:
        base: polygons
        mix: [functions-zoom, polygons-diagonal-dash]
        raster: custom
        shaders:
            defines:
                DASH_COLOR: color.rgb*.5
                DASH_BACKGROUND_COLOR: color.rgb
                DASH_SCALE: 10.
                DASH_SIZE: 0.9
                DASH_TYPE: fill
                DASH_TILE_STYLE: tile
                DASH_DIR: vec3(-0.600,-0.420,0.560)
                NORMAL_TEXTURE_INDEX: 0
                DASH_MIN_SIZE: .8
                DASH_MAX_SIZE: 1.
                DASH_SIZE: shade
            blocks:
                normal: |
                    float shade = dot((sampleRaster(int(NORMAL_TEXTURE_INDEX)).rgb-.5)*2., DASH_DIR);
                    shade = mix(DASH_MIN_SIZE, DASH_MAX_SIZE, (shade*shade*shade)*4.);
