import:
    # Global variables
    - layers/globals.yaml
    # Styles
    - styles/lines.yaml
    - styles/polygons.yaml
    # Layers
    - layers/water.yaml
    - layers/water-labels.yaml
    - layers/earth.yaml
    - layers/roads.yaml
    - layers/roads-labels.yaml
    - layers/transit.yaml
    - layers/buildings.yaml
    - layers/buildings-labels.yaml
    - layers/landuse.yaml
    - layers/boundaries.yaml
    - layers/places.yaml
    # - layers/telecom.yaml
    - layers/pois.yaml
    - layers/ux-sdk-overlay.yaml


# Sources
sources:
    mapzen:
        type: TopoJSON
        url: https://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-uP4vdQc
        rasters: [normals-elevation]
        max_zoom: 16
    normals-elevation:
        type: Raster
        url: https://s3.amazonaws.com/elevation-tiles-prod/normal/{z}/{x}/{y}.png
        max_zoom: 15

    # Only enable this for local debug, should not be enabled for prod (app inserts these at runtime)
    # These are all in San Francisco, California
    #
    # Current location gem
    # mz_current_location:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/9e9588228b0a604264a2/raw/b28be49bea0b7feb859eb65b588c28e9fee5ae2c/map.geojson
    # # Route line
    # mz_route_line:
    #    type: GeoJSON
    #    # sf to ny
    #    url: https://gist.githubusercontent.com/anonymous/30c6c1a75c168d91d90c/raw/92bfe55e622766d250b1f2f5d17bdc7c26acb956/map.geojson
    #    # local sf trip
    #    # url: https://gist.githubusercontent.com/anonymous/9a610ebda6fe4be7bccc/raw/8d217e43f2412d48d01534ba115f1e42dac72e68/map.geojson
    # # Dashed route line
    # mz_dash_line:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/d73b851c64c3e5fbfc2754aa32f44c10/raw/938ae435776e176919c4797bed1465a92e403ef3/map.geojson
    # # Transit route line
    # mz_route_line_transit:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/71ae88cbc6d62c4d141ecd6a61060050/raw/2254bbc18243f5dc609e663a580c9412a7447936/map.geojson
    # # Pin at start of route
    # mz_route_start:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/5262969cb7549ea69221/raw/be03f233fa323d9b5cf50ef1d8e89a1faa3750f1/map.geojson
    # # Pin at end of route
    # mz_route_destination:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/dbae9635dfe46796490e/raw/df55c318635a7d91b309ed40754d4738a292fd38/map.geojson
    # # Arrow for current route location
    # mz_route_location:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/36613092be6e2aa004fd/raw/f753d13069425199e1dea1b449ef67d723f6510e/map.geojson
    # # Dots for transit stops in route preview
    # mz_route_transit_stop:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/b9f16bca4a804f50faf71277d52ee4ab/raw/db13e4e765fa1ac8844b8ba02f4a0f66fe772907/map.geojson
    # # Pins showing search result locations
    # mz_search_result:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/57dc09eeb120919f76de/raw/43426217da3c2bae0522dc4257aaa61e4df3981e/map.geojson
    # # Default point styling (SDK)
    # mz_default_point:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/16324c771edfce45be0721390389b878/raw/7dbaebf17da7da8562e6c6f8768bc8cff83efa88/map.geojson
    # # Default line styling (SDK)
    # mz_default_line:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/26f4e8b6b34b2617b5d5533d89decb39/raw/df8e180ab4f7f19448014dccc4a755f7cfa20003/map.geojson
    # # Default polygon styling (SDK)
    # mz_default_polygon:
    #    type: GeoJSON
    #    url: https://gist.githubusercontent.com/anonymous/88235c795bb44b8c45150bdd5561f947/raw/71d4fab97b6513833bf1a589167119e6169ef86d/map.geojson 


# Camera
cameras:
    cam:
        type: perspective

# Fonts
fonts:
    Abel:
        url: https://fonts.gstatic.com/s/abel/v6/wnJbeWILdr-ZMJJAMsiXsvesZW2xOQ-xsNqO47m55DA.woff
    Aldrich:
        url: https://fonts.gstatic.com/s/aldrich/v6/VWXaIPGrUapL_Y2vGs0lKALUuEpTyoUstqEm5AMlJo4.woff
    Audiowide:
        url: https://fonts.gstatic.com/s/audiowide/v4/8XtYtNKEyyZh481XVWfVOrO3LdcAZYWl9Si6vvxL-qU.woff
    Cairo:
        url: https://fonts.gstatic.com/s/cairo/v1/ZA_4ooaF_Dfdn26t_IoQOaCWcynf_cDxXwCLxiixG1c.woff
    Cairo-Light:
        url: https://fonts.gstatic.com/s/cairo/v1/kjh52RWXSUbTPMXEhLHVFHYhjbSpvc47ee6xR_80Hnw.woff
    Exo2:
        url: https://fonts.gstatic.com/s/exo2/v3/KzoFUeaQw_faskDsymvVJqCWcynf_cDxXwCLxiixG1c.woff
    Inconsolata:
        url: https://fonts.gstatic.com/s/inconsolata/v12/BjAYBlHtW3CJxDcjzrnZCLrIa-7acMAeDBVuclsi6Gc.woff
    Monoton:
        url: https://fonts.gstatic.com/s/monoton/v6/E1qpC-_4m0LngvlMPmKrlgLUuEpTyoUstqEm5AMlJo4.woff
    Offside:
        url: https://fonts.gstatic.com/s/offside/v4/kXtToyuSIeDzSauH8LQwXALUuEpTyoUstqEm5AMlJo4.woff
    Orbitron:
        url: https://fonts.gstatic.com/s/orbitron/v7/94ug0rEgQO_WuI_xKJMFc3YhjbSpvc47ee6xR_80Hnw.woff
    Play:
        url: https://fonts.gstatic.com/s/play/v7/IkErdnKw9ItVkLeeur9GHfesZW2xOQ-xsNqO47m55DA.woff
    Spacemono:
        url: https://fonts.gstatic.com/s/spacemono/v1/adVweg3BJhE6r8jYmXseHb3hpw3pgy2gAi-Ip7WPMi0.woff
    Ubuntu:
        url: https://fonts.gstatic.com/s/ubuntu/v9/vRvZYZlUaogOuHbBTT1SNevvDin1pK8aKteLpeZ5c0A.woff

global:
    animated: true
    order_add_9: function () { return (feature.sort_key * 20 + 9); }
    order_add_8: function () { return (feature.sort_key * 20 + 8); }
    order_add_7: function () { return (feature.sort_key * 20 + 7); }
    order_add_6: function () { return (feature.sort_key * 20 + 6); }
    order_add_5: function () { return (feature.sort_key * 20 + 5); }
    order_add_4: function () { return (feature.sort_key * 20 + 4); }
    order_add_3: function () { return (feature.sort_key * 20 + 3); }
    order_add_2: function () { return (feature.sort_key * 20 + 2); }
    order_add_1: function () { return (feature.sort_key * 20 + 1); }
    order: function () { return (feature.sort_key * 20); }
    order_sub_1: function () { return (feature.sort_key * 20 - 1); }
    order_sub_2: function () { return (feature.sort_key * 20 - 2); }
    order_sub_3: function () { return (feature.sort_key * 20 - 3); }
    order_sub_4: function () { return (feature.sort_key * 20 - 4); }
    order_sub_5: function () { return (feature.sort_key * 20 - 5); }
    order_sub_6: function () { return (feature.sort_key * 20 - 6); }
    order_sub_7: function () { return (feature.sort_key * 20 - 7); }
    order_sub_8: function () { return (feature.sort_key * 20 - 8); }
    order_sub_9: function () { return (feature.sort_key * 20 - 9); }
    pseudoRandomColor: |
        function() {
            return [
                0.7 * (parseInt(feature.id, 16) / 100 % 1),     // jshint ignore:line
                0.7 * (parseInt(feature.id, 16) / 10000 % 1),   // jshint ignore:line
                0.7 * (parseInt(feature.id, 16) / 1000000 % 1), // jshint ignore:line
                1
            ];
        }

# Scene
scene:
    animated: global.animated
    background:
        color: black