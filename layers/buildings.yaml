layers:
    buildings:
        data: { source: mapzen }
        filter:
            not: { location: underground }
        draw:
            polygons:
                visible: false
                order: global.order
                # order: 6580
                color: [0.212,0.302,0.431]
            lines:
                style: lines
                order: global.order_add_1
                # order: 6600
                visible: false
                # color: [0.412,0.686,0.859]
                color: [0.004,0.165,0.933]
                width: 1px
        footprints:
            filter:
                $zoom: { min: 14, max: 16 }
                any:
                    # show footprints for buildings at least one zoom level before they will be extruded
                    - { $zoom: [14], area: { min: 5000 } }
                    - { $zoom: [14], height: { min: 190 } }
                    - { $zoom: [14], volume: { min: 150000 } }
                    - { $zoom: [15], height: { min: 100 } }
                    - { $zoom: [15], area: { min: 2500 } }
                    - { $zoom: [15], volume: { min: 100000 } }
            draw:
                polygons:
                    color: [0.212,0.302,0.431]
                    visible: true
                lines:
                    # color: [[14,[0.334,0.536,0.630]],[16,[0.508,0.711,0.735]]]
                    # color: [0.661,0.926,0.957]
                    color: [0.392,0.627,0.651]
                    width: [[14,0.55px],[16,0.5px]]
                    visible: true
            # before zoom 15, we want buidings to be below roads...
            # (once they extrude, then we want them to be above roads, which is the default data value)
            before_z15:
                filter:
                    $zoom: { max: 16 }
                draw:
                    polygons:
                        order: 5800 #290 * 20
                    lines:
                        order: 5820 #291 * 20

        extrude:
            filter:
                $zoom: { min: 16 }
                any:
                    - { $zoom: [16], height: { min: 60 } }
                    - { $zoom: [16], area: { min: 1200 } }
                    - { $zoom: [16], volume: { min: 70000 } }
                    - { $zoom: { min: 17 } }
            draw:
                polygons:
                    visible: true
                    style: buildings
                    color: global.pseudoRandomColor
                    # color: [0.592,0.827,0.851]
                    extrude: function() { return feature.height || 20; }
                lines:
                    visible: true
                    style: buildings-lns
                    # color: [0.592,0.827,0.851]
                    # color: [[16,[0.428,0.687,0.717]],[18,[0.786,0.952,0.970]]]
                    color: [[16,[0.428,0.687,0.717]],[18,[0.649,0.785,0.801]]]
                    # width: [[16,0.5px],[17,1px]]
                    width: [[12, .1px], [14, 0.1px], [16, 0.75px], [17, 0.85px], [18, 1.0px]]
                    extrude: function() { return feature.height || 20; }

styles:
    geometry-dynamic-height:
        shaders:
            defines:
                ZOOM_START: 16.0
                ZOOM_END: 20.0
                HEIGHT_MIN: .0
                HEIGHT_MAX: 2.0

    buildings:
        base: polygons
        mix: [functions-zoom, geometry-normal,generative-random, tron-palette, geometry-dynamic-height]
        texcoords: true
        blend: add
        shaders:
            defines:
                ZOOM_START: 16.
                ZOOM_END: 20.
                WALLLINES_COLOR: vec3(0.181,0.259,0.370)
            blocks:
                color: |
                    if (isWall()) {
                        float r = 0.1+random(color.r)*.9;
                        float g = 0.1+random(color.g)*.9;
                        float b = 0.1+random(color.b)*.9;
                        float z = zoom();
                        
                        float lineWidth = 0.003*z;
                        color = mix(vec4(0.),
                                    vec4(WALLLINES_COLOR,1.),
                                    1.0-(step(lineWidth,v_texcoord.x)-step(1.0-lineWidth,v_texcoord.x))*
                                        (step(lineWidth,v_texcoord.y)-step(1.0-lineWidth,v_texcoord.y)) );

                        vec2 st = v_texcoord.xy;
                        if (r > 0.5 ) st = vec2(v_texcoord.x, worldPosition().z*0.01);
                        if (g > 0.5 ) st *= mix(10.,50.,random(g));
                        if (b > 0.5 ) st.x += step(1., mod(st.y,2.0)) * 0.5;

                        float n = random(floor(st));
                        color = mix(color,
                                    mix(vec4(WALLLINES_COLOR, n),
                                        vec4(palette(r), 1.)*n,
                                        z),
                                    mix(.15,1.,z)-v_texcoord.y*.5);
                    } else {
                        color = vec4(0.);
                    }

    buildings-lns:
        base: lines
        mix: [geometry-dynamic-width, geometry-dynamic-height]
        shaders:
            defines:
                ZOOM_START: 16.
                ZOOM_END: 20.
                WIDTH_MIN: .7
                WIDTH_MAX: 1.0

